# Copyright 2020 Wayback Archiver. All rights reserved.
# Use of this source code is governed by the MIT license
# that can be found in the LICENSE file.

name: Snap Package Builder

on:
  workflow_call:
    inputs:
      product:
        type: string
        required: true
        description: 'Product or package name'
      channel:
        type: string
        default: edge
        description: 'Release of a snap is installed and tracked for updates.'
      publish:
        type: boolean
        default: false
        description: 'Whether or not to publish a snap.'
      release:
        type: boolean
        default: false
        description: 'Whether or not to define a workflow called is releasing.'
      egress-policy:
        type: string
        default: 'block'
        description: 'Harden-Runner egress traffic policy'
    secrets:
      snapcraft-token:
        description: 'The login data for the Snap Store produced with "snapcraft export-login", see: https://gist.github.com/waybackarchiver/076163653504f5fcef9bc4cc55422f5e'
      wayback-ipfs-apikey:
        description: 'Managed IPFS credential for distribution binaries.'

permissions:
  contents: read

jobs:
  snap-builder:
    name: Snap Package Builder
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1f99358870fe1c846a3ccba386cc2b2246836776 # v2.2.1
        with:
          egress-policy: ${{ inputs.egress-policy || 'block' }}
          disable-telemetry: true
          allowed-endpoints: >
            github.com:443
            api.github.com:443
            docker.io:443
            auth.docker.io:443
            registry-1.docker.io:443
            production.cloudflare.docker.com:443
            storage.googleapis.com:443
            proxy.golang.org:443
            sum.golang.org:443
            snapcraft.io:443
            api.snapcraft.io:443
            dashboard.snapcraft.io:443
            login.ubuntu.com:443
            archive.ubuntu.com:443
            security.ubuntu.com:443
            cloud-images.ubuntu.com:443
            storage.snapcraftcontent.com:443
            canonical-bos01.cdn.snapcraftcontent.com:443
            canonical-lgw01.cdn.snapcraftcontent.com:443
            uk.lxd.images.canonical.com:443
            us.lxd.images.canonical.com:443
            images.linuxcontainers.org:443

      - name: Check out code base
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          fetch-depth: 0
          submodules: true
          persist-credentials: false

      - name: Check out code base
        if: github.event_name == 'pull_request'
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
        with:
          fetch-depth: 0
          submodules: true
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Replace version (for release)
        shell: bash
        if: ${{ inputs.release }}
        run: |
          version=$(git describe --tags `git rev-list --tags --max-count=1` | sed -e 's/v//g')
          sed -i "s/version: 'git'/version: '${version}'/g" snapcraft.yaml

      - id: builder
        name: Build Snap
        uses: snapcore/action-build@2096990827aa966f773676c8a53793c723b6b40f # v1.2.0
        with:
          snapcraft-channel: ${{ inputs.channel }}
        env:
          WAYBACK_IPFS_APIKEY: ${{ secrets.wayback-ipfs-apikey }}

      - name: Publish Snap
        uses: snapcore/action-publish@0a8d537ae06f4a292e8b4ef1084cd5631b3c6871 # v1.1.1
        if: ${{ inputs.publish }}
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.snapcraft-token }}
        with:
          store_login: ${{ secrets.snapcraft-token }}
          snap: ${{ steps.builder.outputs.snap }}
          release: ${{ inputs.channel }}

      - name: Upload artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: ${{ inputs.product }}-snap
          path: ${{ steps.builder.outputs.snap }}
          if-no-files-found: error
